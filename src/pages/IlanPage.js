import { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../App';
import FilterBar from '../components/FilterBar';
import IlanDetailDrawer from '../components/IlanDetailDrawer';
import './IlanPage.css';

const seviyeClass = (s) => {
  switch (s) {
    case 'Dr. Ã–ÄŸr. Ãœyesi': return 'dr';
    case 'DoÃ§ent': return 'doc';
    case 'ProfesÃ¶r': return 'prof';
    default: return 'default';
  }
};

export default function IlanPage() {
  const [ilanlar, setIlanlar] = useState([]);
  const [filtre, setFiltre] = useState({ seviye: 'TÃ¼mÃ¼', fakulte: 'TÃ¼mÃ¼' });
  const [secili, setSecili] = useState(null);

  const navigate = useNavigate();
  const { logout } = useAuth();

  /* ---------- ilanlarÄ± Ã§ek ---------- */
  useEffect(() => {
    fetch('http://localhost:5000/api/ilanlar')
      .then(r => r.json())
      .then(setIlanlar)
      .catch(() => alert('Ä°lanlar Ã§ekilemedi.'));
  }, []);

  /* ---------- filtreleme ---------- */
  const goster = (i) =>
    (filtre.seviye === 'TÃ¼mÃ¼' || i.seviye === filtre.seviye) &&
    (filtre.fakulte === 'TÃ¼mÃ¼' || i.fakultesi === filtre.fakulte);

  const filtered = ilanlar.filter(goster);

  /* ---------- baÅŸvuru baÅŸlat ---------- */
  const handleBasvur = async (ilan) => {
    console.log('ğŸŸ¢ handleBasvur Ã§aÄŸrÄ±ldÄ±:', ilan);
    console.log('ğŸ”‘ ilanId:', ilan._id);
    console.log('ğŸ‘¤ userId:', localStorage.getItem('userId'));

    try {
      const userId = localStorage.getItem('userId');
      if (!userId || userId === 'undefined') {
        alert('GiriÅŸ yapmanÄ±z gerekiyor.');
        navigate('/aday/login');
        return;
      }

      // Ä°lanÄ± seÃ§ip baÅŸvuru kaydÄ±nÄ± backend'e gÃ¶nder
      const response = await fetch('http://localhost:5000/api/applications/start', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          ilanId: ilan._id,
          userId: userId
        })
      });

      const data = await response.json();

      if (!response.ok) {
        console.error('BaÅŸvuru kayÄ±t hatasÄ±:', data.message);
        alert(data.message || 'BaÅŸvuru baÅŸlatÄ±lamadÄ±.');
        return;
      }

      // BaÅŸarÄ±yla ilan seÃ§ildiyse localStorage'a yaz
      localStorage.setItem('ilanId', ilan._id);
      console.log('âœ… Ä°lan kaydedildi:', ilan._id);

      // Ä°lgili form sayfasÄ±na yÃ¶nlendir
      const ilkForm = ilan.gerekliFormlar?.[0] || 'makaleler';
      navigate('/' + ilkForm);

    } catch (err) {
      console.error('BaÅŸvuru baÅŸlatÄ±lÄ±rken hata oluÅŸtu:', err);
      alert('BaÅŸvuru baÅŸlatÄ±lamadÄ±.');
    }
  };

  /* ---------- Ã§Ä±kÄ±ÅŸ ---------- */
  const handleLogout = () => {
    logout();
    navigate('/');
  };

  return (
    <div className="ilan-page">
      <header className="ilan-header">
        <div className="header-top">
          <h1>AÃ§Ä±k Akademik Ä°lanlar</h1>
          <button className="logout-btn" onClick={handleLogout}>
            Ã‡Ä±kÄ±ÅŸ Yap
          </button>
        </div>
        <p>Uygun ilanlarÄ± filtreleyin ya da Ã¼zerine tÄ±klayÄ±p detaylarÄ±na gÃ¶z atÄ±n.</p>
      </header>

      <div className="ilan-filters">
        <FilterBar ilanlar={ilanlar} filtre={filtre} onChange={setFiltre} />
      </div>

      <div className="ilan-list">
        {filtered.length === 0 && <p className="no-result">Ä°lan bulunamadÄ±.</p>}
        {filtered.map(ilan => (
          <div
            key={ilan._id}
            className="ilan-row"
            onClick={() => setSecili(ilan)}
          >
            <div className="ilan-left">
              <span className={`badge badge-${seviyeClass(ilan.seviye)}`}>
                {ilan.seviye}
              </span>
              <span className="ilan-birim">{ilan.birim}</span>
            </div>
            <div className="ilan-right">
              {new Date(ilan.baslangicTarihi).toLocaleDateString()} â€“{' '}
              {new Date(ilan.bitisTarihi).toLocaleDateString()}
            </div>
          </div>
        ))}
      </div>

      {/* Detay drawer aÃ§Ä±lÄ±rsa */}
      {secili && (
        <IlanDetailDrawer
          ilan={secili}
          onClose={() => setSecili(null)}
          onApply={() => handleBasvur(secili)}
        />
      )}
    </div>
  );
}
